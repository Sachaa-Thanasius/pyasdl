# ruff: noqa: INP001, T201

"""An example that takes a version of the Python ASDL description from the CPython repo and creates corresponding
AST definitions in pure Python.

To run the example, you can use ``python -m examples.cpython.run``.
"""

import pathlib
import time

import pyasdl


class TimeCatcher:
    """A context manager that measures the time taken to execute some context.

    Attributes
    ----------
    elapsed: float
        The time taken to execute the body.
    """

    def __enter__(self):
        self.elapsed = time.perf_counter()
        return self

    def __exit__(self, *_exc_info: object):
        self.elapsed = time.perf_counter() - self.elapsed


def main() -> None:
    example_dir = pathlib.Path("examples/cpython")
    input_path = example_dir / "Python314.asdl"
    output_path = example_dir / "Python314_ast.py"

    source = input_path.read_text("utf-8")

    with TimeCatcher() as tc:
        code = pyasdl.generate_code(source)

    with output_path.open("w", encoding="utf-8") as fp:
        fp.write("# ruff: noqa: INP001, PLR0913, A002\n")
        fp.write("\n")
        fp.write('"""Class definitions representing the AST nodes outlined in Python.asdl. Generated by run.py."""\n')
        fp.write("\n")
        fp.write(code)

    print(f"Time taken: {tc.elapsed}")


if __name__ == "__main__":
    main()
